aash
====

simple test shell implementing tiny subset of POSIX sh as an exercise.

* hand-written lexer
* parser generated by (slightly modified) lemon
* supported syntax:
  - and (a && b)
  - or (a || b)
  - not (!a)
  - simple quoting ("foo bar", 'baz zblerx')
  - pipes (a | b)
  - redirections (a > b; a 2>&1; a < b; a >> b)
  - subshells ( (a;b) )


* unsupported stuff so far:
  - no background process (a &) (parsed but not ran)
  - no variables
  - no interactive mode
  - no compounded commands (if,for,while,until,case,...)
  - ...

build
=====

    $ make

usage
=====


    echo '(echo aa; echo "a b"; echo bb) | grep b | grep a && false' | ./aash
    === LEXING ===
    TOK: LPAREN (
    TOK: WORD <echo>
    TOK: WORD <aa>
    TOK: SEMICOL ;
    TOK: WORD <echo>
    TOK: WORD <a b>
    TOK: SEMICOL ;
    TOK: WORD <echo>
    TOK: WORD <bb>
    TOK: RPAREN )
    TOK: PIPE
    TOK: WORD <grep>
    TOK: WORD <b>
    TOK: PIPE
    TOK: WORD <grep>
    TOK: WORD <a>
    TOK: AND
    TOK: WORD <false>
    TOK: NEWLINE
    TOK: NONE
    === PARSING ===
    PROG {
      PROG {
        AND {
          left {
            PIPE {
              left {
                PIPE {
                  left {
                    SUBSHELL {
                      PROG {
                        CMD <echo> <aa>
                        CMD <echo> <a b>
                        CMD <echo> <bb>
                      }
                    }
                  }
                  right {
                    CMD <grep> <b>
                  }
                }
              }
              right {
                CMD <grep> <a>
              }
            }
          }
          right {
            CMD <false>
          }
        }
      }
    }
    === RUNNING ===
    a b
    RESULT = 256 (exit code=1)
